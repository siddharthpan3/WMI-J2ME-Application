/*
 * To change this template, choose Tools | Templates

 */
package sendsms;

import java.io.InputStream;
import javax.microedition.io.Connector;
import javax.microedition.io.HttpConnection;
import javax.microedition.lcdui.*;
import javax.microedition.midlet.MIDlet;
import javax.wireless.messaging.*;

/**
 * @author Sid
 */
public class SendSMS extends MIDlet implements CommandListener {
    Display display;
    
    private TextField to;
    private TextField temp;
    private TextField humidity;
    private TextField wind_velocity;
    
    private Spacer spacer1,spacer2;
    private Alert alert;
    private Command send_sms,send_url, exit;
    private Form main_frm;
    
    MessageConnection clientConn;
    

    public SendSMS() {
        
        main_frm = new Form("Welcome to WMI");
            
        to = new TextField("To", "", 10, TextField.PHONENUMBER);
        temp = new TextField("Temperature (in c)         : ", "", 5, TextField.NUMERIC);
        humidity = new TextField("Humidity (in %)              : ", "", 5, TextField.NUMERIC);
        wind_velocity = new TextField("Wind Velocity (in m/s)   : ", "", 5, TextField.NUMERIC);
        
        send_sms = new Command("Send via SMS", Command.SCREEN, 5);
        exit = new Command("Exit", Command.BACK, 0);
        send_url = new Command("Send via URL", Command.SCREEN, 5);
        
        spacer1 = new Spacer(0,10);    
        spacer2 = new Spacer(0,5);
        
    
        main_frm.append(spacer1);
        main_frm.append(to);
        main_frm.append(spacer2);
        main_frm.append(temp);
        main_frm.append(humidity);
        main_frm.append(wind_velocity);
            
        main_frm.addCommand(send_sms);
        main_frm.addCommand(exit);
        main_frm.addCommand(send_url);
        
        main_frm.setCommandListener(this);

    }
    
    public void startApp() {
        display = Display.getDisplay(this);
        display.setCurrent(main_frm);
    }
    
    public void pauseApp() {
    }
    
    public void destroyApp(boolean unconditional) {
        notifyDestroyed();
    }
    
    public void commandAction(Command cmd, Displayable disp){
        String str_mno = to.getString();
        String str_temp = temp.getString();
        String str_humidity = humidity.getString();
        String str_wind_velocity = wind_velocity.getString(); 
        String str_data = str_temp + "," + str_humidity + "," + str_wind_velocity;
        
        if (cmd == exit) {
            destroyApp(false);
        }
        if (cmd == send_sms) {
                        
        /*  The SMS sending part is not done, the code below is just for sending an SMS from one person to another  
            if (str_mno.equals("")) {
                alert = new Alert("Alert");
                alert.setString("Enter Mobile Number!!!");
                alert.setTimeout(Alert.FOREVER);
                display.setCurrent(alert);
            } 
            if (str_temp.equals("") || str_wind_velocity.equals("") || str_humidity.equals("")) {
                alert = new Alert("Alert");
                alert.setString("Can not leave the field Temperature and/or Humidity and/or Wind Velocity blank");
                alert.setTimeout(Alert.FOREVER);
                display.setCurrent(alert);
            }
            else 
            {
                try {
                    clientConn = (MessageConnection) Connector.open("sms://" + str_mno);
                } catch (Exception e) {
                    alert = new Alert("Alert");
                    alert.setString(e.getMessage()+"|"+e.toString());
                    System.out.println(e.getMessage()+"|"+e.toString());
                    alert.setTimeout(2000);
                    display.setCurrent(alert);
                }
                
                try {
                    TextMessage textmessage = (TextMessage) clientConn.newMessage(MessageConnection.TEXT_MESSAGE);
                    textmessage.setAddress("sms://" + str_mno);
                    textmessage.setPayloadText(str_data);
                    clientConn.send(textmessage);
                } catch (Exception e) {
                    alert = new Alert("Alert", "", null, AlertType.INFO);
                    alert.setTimeout(Alert.FOREVER);
                    alert.setString(e.getMessage()+"|"+e.toString());
                    System.out.println(e.getMessage()+"|"+e.toString());
                    display.setCurrent(alert);
                }
            }
        }	*/
            
        if(cmd == send_url)
        {
            String url = "http://127.0.0.1:8000/?mno="+ str_mno+"&temp="+str_temp+"&humidity="+str_humidity+"&windvelocity="+str_wind_velocity;
                                   
            HttpConnection httpCon = null;
            InputStream is = null;
           
            int rc;

            if (str_mno.equals("")) {
                alert = new Alert("Alert");
                alert.setString("Enter Mobile Number!!!");
                alert.setTimeout(Alert.FOREVER);
                display.setCurrent(alert);
            } 
            if (str_temp.equals("") || str_wind_velocity.equals("") || str_humidity.equals("")) {
                alert = new Alert("Alert");
                alert.setString("Can not leave the field Temperature and/or Wind Velocity blank");
                alert.setTimeout(Alert.FOREVER);
                display.setCurrent(alert);
            }
            else 
            {
                try {
                    // Open an HTTP Connection object
                    httpCon = (HttpConnection)Connector.open(url);
                    // Setup HTTP Request to GET
                    httpCon.setRequestMethod(HttpConnection.GET);

                    httpCon.setRequestProperty("User-Agent", "Profile/MIDP-1.0 Confirguration/CLDC-1.0");
                    httpCon.setRequestProperty("Accept_Language","en-US");
                    
                    // Read Response from the Server
                    StringBuffer sb = new StringBuffer();
                    is = httpCon.openDataInputStream();
                    int chr;

                    while ((chr = is.read()) != -1){
                        sb.append((char) chr);
                    }
                    
                    // Print the response in console - for testing purpose
                    System.out.println(sb.toString());

                } 
                catch(Exception e){
                }
                finally {
                    try{
                        if(is!= null)
                            is.close();
                        if(httpCon != null)
                            httpCon.close();
                    }
                    catch(Exception e){
                    }
                }
            
            }
        }
        
    }
    
   
}

